LAB-3
---------
3.1

CREATE OR REPLACE FUNCTION CALLAGE(date1 IN DATE)
RETURN NUMBER AS
AGE NUMBER;
 BEGIN
  AGE:=ROUND(MONTHS_BETWEEN(SYSDATE,DATE)/12);
  RETURN AGE;
 END;
SELECT CALLAGE('&date1') FROM DUAL;


----------------------------------------------------------------------------------------------------------------

3.2
CREATE OR REPLACE PROCEDURE details IS
v_scode staff_masters.staff_code%TYPE;
v_sname staff_masters.staff_name%TYPE;
v_dcode staff_masters.dept_code%TYPE;
v_mname staff_masters.staff_name%TYPE;

CURSOR c1 IS
SELECT s.staff_code,s.staff_name,s.dept.code,s1.staff_name
FROM staff_masters s,staff_masters s1
WHERE s1.staff_code=s.mgr_code;

BEGIN
OPEN c1;
LOOP
FETCH c1
INTO v_scode,v_sname,v_dcode,v_mname;
EXIT WHEN c1%NOTFOUND;
dbms_output.put_line('Code is'||v_scode||'staff_name is'||v_sname||'dept code is'||v_dcode||'manager name'||v_mname);
END LOOP;
CLODE c1;
END;

EXECUTE details();


----------------------------------------------------------------------------------------------------------------

3.3
CREATE OR REPLACE FUNCTION calci(s_code IN staff_masters.staff_code%TYPE)
RETURN NUMBER AS
da staff_masters.staff_sal%TYPE ;
hra staff_masters.staff_sal%TYPE;
ta staff_masters.staff_sal%TYPE;
spal staff_masters.staff_sal%TYPE;
ctc staff_masters.staff_sal%TYPE;
service NUMBER;
sal staff_masters.staff_sal%TYPE;
datel staff_masters.hiredate%TYPE
 BEGIN
  SELECT staff_sal,hiredate INTO sal,date1
  FROM staff_masters
  WHERE staff_code=s_code;
   da:=ROUND(0.15*sal);
   hra:=ROUND(0.20*sal);
   ta:=ROUND(0.8*sal);
   service:=(MONTHS_BETWEEN(SYSDATE,date1)/12);
   IF(service<1) THEN
    spal:=0.0;
   ELSEIF(service>=1 AND service<2) THEN
    spal:=ROUND(0.10*sal);
   ELSEIF(service>=2 AND service<4) THEN
    spal:=ROUND(0.20*sal);
   ELSEIF(service>4) THEN
    spal:=ROUND(0.30*sal);
   END IF;
  ctc:=ROUND(da+hra+ta+sal+spal);
  RETURN ctc;
 END;
SELECT calctc('&staff_code') FROM DUAL;
SHOW ERROR;


----------------------------------------------------------------------------------------------------------------

3.4
CREATE TABLE staff_masters_back AS SELECT staff_sal FROM staff_masters;
CREATE OR REPLACE PROCEDURE upsal(scode IN staff_masters.staff_code%TYPE)
AS
 sal staff_masters.staff_sal%TYPE;
 date1 staff_masters.hiredate%TYPE;
 sall staff_masters.staff_sal%TYPE;
 exp NUMBER;
 BEGIN
 SELECT staff_sal,hiredate
 INTO sal,date1
 FROM staff_masters
 WHERE staff_code=scode;

exp:=(sysdate-date1)/365;
if exp<2
 THEN
  sall:=sal;
  ELSEIF exp>2 AND exp<5
 THEN
  sall:=sal+(0.2*sal);
  ELSEIF exp>5 THEN
  sall:=sal+(0.25*sal);
END IF;

UPDATE staff_masters
SET staff_sal=sall
WHERE staff_code=scode;
IF SQL%FOUND THEN
 dbms_output.put_line('Updated');
END IF;
END;

EXECUTE upsal('1003');

----------------------------------------------------------------------------------------------------------------

3.5
CREATE OR REPLACE PROCEDURE book1(bcode IN book_masters.book_code%TYPE,stucode IN student_masters.student_code%TYPE,
stacode IN staff_masters.staff_code%TYPE)
AS
issue_date book_transactions.book_issue_date%TYPE;
ret_date book_transactions.book_expected_return_date%TYPE;
ac_ret_date book_transactions.book_actual_return_date%TYPE;
BEGIN
 issue_date:=sysdate;
 return_date:=sysdate+10;
 ac_ret_date:=ret_date;
 IF next_day(issue_date+7,'saturday')=ret_date THEN
 ret_date:=ret_date+2;
 END IF;

 INSERT INTO book_transactions VALUES(bcode,stacode,issue_date,ret_date,ac_ret_date);
END;

DECLARE
BEGIN
 book1('&bcode','&stucode','&stacode');
END;


---------------------------------------------------------------------------------------------------------------- 

